input {
  beats {
    port => 5044
    host => "0.0.0.0"  # 모든 네트워크 인터페이스에서 연결 허용
  }
}

filter {
    # 기존 로그 처리 (Grok 패턴 포함)
    grok {
      match => {
        "message" => [
          "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] *%{LOGLEVEL:loglevel}* %{GREEDYDATA:log_message}",
          "Error has been observed at the following site\(s\):\s*|\*%{DATA:error_site} ⇢ %{NUMBER:status_code:int} %{DATA:status_message} from %{WORD:method} %{URI:url} \[%{DATA:component}\]|\Original Stack Trace:(?<stack_trace>[\s\S]*)"
          "%{TIMESTAMP_ISO8601:timestamp} - %{DATA:logger_name} - %{LOGLEVEL:loglevel} - %{GREEDYDATA:log_message}"
        ]
      }
    }

  # Grok 실패 디버깅 태그 추가
  if "grokparsefailure" in [tags] {
    mutate {
      add_tag => ["grok_debug"]
    }
  }

  # 타임스탬프 변환
  date {
    match => ["timestamp", "yyyy-MM-dd HH:mm:ss"]
    target => "@timestamp"
    timezone => "Asia/Seoul"
  }

  # BE1 서버 식별
  if [host][name] == "ip-172-30-3-61" {
    mutate {
      add_field => { "server" => "BE1" }
    }
  }

  # BE2 서버 식별
  else if [host][name] == "ip-172-30-6-252" {
    mutate {
      add_field => { "server" => "BE2" }
    }
  }

  # 에러 로그 식별 필드 추가
  if [error_site] {
    mutate {
      add_field => { "log_type" => "error_log" }
    }
  } else {
    mutate {
      add_field => { "log_type" => "spring_log" }
    }
  }

  # 로그 파일 이름 추출
  grok {
    match => { "[log][file][path]" => ".*/(?<log_filename>[^/]+)$" }
  }

  # 파일 이름에서 날짜만 추출
  grok {
    match => { "log_filename" => ".*-(?<log_date>\d{4}-\d{2}-\d{2})\.\d+\.log$" }
  }
}

output {
  # BE1 에러 로그
  if [server] == "BE1" and [log_type] == "error_log" {
    elasticsearch {
      hosts => ["http://${ELK_EC2_HOST}:9200"]
      index => "be1-error-logs-%{log_date}"
      user => "logstash_internal"
      password => "${LOGSTASH_INTERNAL_PASSWORD}"
    }
  }

  # BE2 에러 로그
  if [server] == "BE2" and [log_type] == "error_log" {
    elasticsearch {
      hosts => ["http://${ELK_EC2_HOST}:9200"]
      index => "be2-error-logs-%{log_date}"
      user => "logstash_internal"
      password => "${LOGSTASH_INTERNAL_PASSWORD}"
    }
  }

  # BE1 일반 로그
  if [server] == "BE1" and [log_type] == "spring_log" {
    elasticsearch {
      hosts => ["http://${ELK_EC2_HOST}:9200"]
      index => "be1-spring-logs-%{log_date}"
      user => "logstash_internal"
      password => "${LOGSTASH_INTERNAL_PASSWORD}"
    }
  }

  # BE2 일반 로그
  if [server] == "BE2" and [log_type] == "spring_log" {
    elasticsearch {
      hosts => ["http://${ELK_EC2_HOST}:9200"]
      index => "be2-spring-logs-%{log_date}"
      user => "logstash_internal"
      password => "${LOGSTASH_INTERNAL_PASSWORD}"
    }
  }

  # 기본 출력 (디버깅용)
  stdout {
    codec => rubydebug
  }
}
